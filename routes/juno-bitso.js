import { auth, Primate } from '@thewebchimp/primate';
import JunoBitsoController from '#controllers/juno-bitso.controller.js';

const router = Primate.getRouter();

router.post('/juno/clabes', auth, JunoBitsoController.createJunoClabeForUser);
router.get('/juno/bank-accounts', auth, JunoBitsoController.getJunoBankAccounts);
router.get('/juno/account-details', auth, JunoBitsoController.getJunoAccountDetails);
router.get('/juno/balance', auth, JunoBitsoController.getJunoBalance);
router.get('/juno/transactions', auth, JunoBitsoController.listJunoTransactions);
router.get('/juno/clabes', auth, JunoBitsoController.listJunoClabes);
router.get('/juno/deposits', auth, JunoBitsoController.listJunoDeposits);
router.post('/juno/mock-deposit', auth, JunoBitsoController.createMockDeposit);

router.get('/bitso/balance', auth, JunoBitsoController.getBitsoBalance);
router.get('/bitso/fundings', auth, JunoBitsoController.listFundings);
router.get('/bitso/fundings/:fid', auth, JunoBitsoController.getFundingDetails);
router.get('/bitso/funding-methods/:currency', auth, JunoBitsoController.getFundingMethods);
router.get('/bitso/withdrawal-methods/:currency', auth, JunoBitsoController.getWithdrawalMethods);
router.post('/bitso/withdrawals/fiat', auth, JunoBitsoController.createFiatWithdrawal);
router.post('/bitso/withdrawals/btc', auth, JunoBitsoController.createBtcWithdrawal);
router.post('/bitso/withdrawals/xrp', auth, JunoBitsoController.createXrpWithdrawal);
router.post('/bitso/withdrawals/bitso-transfer', auth, JunoBitsoController.createBitsoTransfer);
router.get('/bitso/withdrawals', auth, JunoBitsoController.listWithdrawals);
router.get('/bitso/withdrawals/filter', auth, JunoBitsoController.filterMxnWithdrawals);
router.get('/bitso/withdrawals/:wid', auth, JunoBitsoController.getWithdrawalDetails);
router.post('/bitso/contacts', auth, JunoBitsoController.createContact);
router.get('/bitso/contacts', auth, JunoBitsoController.listContacts);
router.patch('/bitso/contacts/:contactId', auth, JunoBitsoController.patchContact);
router.delete('/bitso/contacts/:contactId', auth, JunoBitsoController.deleteContact);
router.get('/bitso/clabes', auth, JunoBitsoController.listBitsoClabes);
router.post('/bitso/clabes', auth, JunoBitsoController.createBitsoClabe);
router.get('/bitso/clabes/:clabe', auth, JunoBitsoController.getBitsoClabeDetails);
router.put('/bitso/clabes/:clabe/limits', auth, JunoBitsoController.setClabeLimits);
router.get('/bitso/clabes/:clabe/limits', auth, JunoBitsoController.getClabeLimits);
router.put('/bitso/clabes/:clabe/status', auth, JunoBitsoController.updateClabeStatus);
router.get('/bitso/books', auth, JunoBitsoController.getAvailableBooks);
router.get('/bitso/ticker', auth, JunoBitsoController.getTicker);
router.get('/bitso/order-book', auth, JunoBitsoController.getOrderBook);
router.post('/bitso/orders', auth, JunoBitsoController.placeOrder);
router.get('/bitso/orders/open', auth, JunoBitsoController.listOpenOrders);
router.get('/bitso/orders/lookup', auth, JunoBitsoController.lookupOrders);
router.delete('/bitso/orders', auth, JunoBitsoController.cancelOrders);
router.get('/bitso/fees', auth, JunoBitsoController.getFees);
router.get('/bitso/user-trades', auth, JunoBitsoController.listUserTrades);
router.post('/bitso/conversions/quote', auth, JunoBitsoController.requestConversionQuote);
router.put('/bitso/conversions/execute/:quoteId', auth, JunoBitsoController.executeConversion);
router.get('/bitso/conversions/:conversionId', auth, JunoBitsoController.getConversionDetails);
router.post('/bitso/bridge/security-token', auth, JunoBitsoController.getSecurityToken);
router.post('/bitso/bridge/terms', auth, JunoBitsoController.setBridgeTermsFlag);
router.post('/bitso/bridge/onboarding', auth, JunoBitsoController.customerOnboarding);
router.post('/bitso/bridge/external-accounts', auth, JunoBitsoController.registerBankAccount);
router.get('/bitso/bridge/external-accounts', auth, JunoBitsoController.listRegisteredBankAccounts);
router.post('/bitso/bridge/deposit-intents/wire', auth, JunoBitsoController.createUsdWireDepositIntent);
router.post('/bitso/bridge/deposit-intents/sepa', auth, JunoBitsoController.createSepaDepositIntent);
router.get('/bitso/vasps', auth, JunoBitsoController.getVasps);
router.post('/bitso/webhooks', auth, JunoBitsoController.registerWebhook);
router.post('/bitso/withdrawal/preview-brl', auth, JunoBitsoController.previewBrlWithdrawal);
router.post('/spei/payments', auth, JunoBitsoController.createOneTimePayment);
router.get('/spei/payments', auth, JunoBitsoController.listOneTimePayments);
router.get('/spei/payments/:paymentId', auth, JunoBitsoController.getOneTimePaymentDetails);
router.get('/spei/deposits', auth, JunoBitsoController.listSpeiDeposits);
router.patch('/bitso/consumer-contacts/:contactId', auth, JunoBitsoController.updateContact);

export { router };
